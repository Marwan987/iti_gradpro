    upstream backend {
        server node1.app1.project.com:443 max_fails=3 fail_timeout=15s;
        server node2.app1.project.com:443 max_fails=3 fail_timeout=15s;
    }
    
    server {
        listen      443 ssl;

        rewrite_log on;
        error_log   /var/log/nginx/lb.error.log;
        proxy_set_header Host      $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Proxy-Cache $upstream_cache_status;
        ssl_certificate        "{{ ssl_generated_certificate_path }}";
        ssl_certificate_key     "{{ ssl_certificate_key_path }}" ;

        location / {
            proxy_cache backcache;
            proxy_cache_min_uses 3;
            proxy_ignore_headers Cache-Control;
            proxy_cache_revalidate on;
            proxy_cache_valid 200 4s;
            proxy_cache_lock on;
            proxy_cache_use_stale updating;
            proxy_cache_background_update on;
            add_header X-Proxy-Cache $upstream_cache_status; 
            proxy_pass https://backend;
        }

        location /nginx_status {
             stub_status;
        }
    }

    server {
            listen 80 ;
            if ($http_x_forwarded_proto != 'https') {
                   rewrite ^(.*) https://$host$1 redirect;
            }
    }

